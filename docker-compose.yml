services:
    laravel:
        image: 'backend'
        container_name: laravel
        restart: unless-stopped
        ports:
          - 8080:80
        networks:
            - backend
        depends_on:
            mongodb:
              condition: service_healthy
            redis:
              condition: service_healthy
    mlapi:
      image: ml_api
      container_name: mlapi
      restart: unless-stopped
      volumes:
        - ./ml_api/storage/app:/var/www/storage/app
      networks:
        - backend

    cron:
        image: 'backend'
        restart: unless-stopped
        command: bash -c "(crontab -l 2>/dev/null; echo '* * * * * /usr/local/bin/php /var/www/artisan schedule:run') | crontab - && touch /var/log/cron.log && cron -f"
        networks:
            - backend
        depends_on:
            redis:
              condition: service_healthy
            mlapi:
              condition: service_started

    web:
        image: nginx:alpine
        container_name: web-nginx
        restart: unless-stopped
        tty: true
        volumes:
        - ./nginx/:/etc/nginx/conf.d/
        - ./nginx/admin:/usr/share/nginx/html
        ports:
            - 8000:80
        networks:
            - backend
        depends_on:
          laravel:
            condition: service_started
 
    mongodb:
        image: 'mongo'
        container_name: mongodb
        restart: unless-stopped
        env_file:
          ./mongo.env
        volumes:
            - 'data-mongodb:/data/db'
        ports:
            - '${FORWARD_MONGODB_PORT:-27017}:27017'
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - mongosh
                - 'mongodb://localhost:27017/admin'
                - '--eval=db.runCommand({ping:1})'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        container_name: redis
        restart: unless-stopped
        volumes:
            - 'data-redis:/data'
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    backend:
        driver: bridge
volumes:
    data-mongodb:
        driver: local
    data-redis:
        driver: local
