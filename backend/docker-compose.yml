services:
    laravel:
        image: 'backend'
        container_name: laravel
        restart: unless-stopped
        tty: true
        volumes:
            - ./:/var/www
        networks:
            - backend
        depends_on:
            - mongodb
            - redis
    init_data:
        image: 'backend'
        volumes:
            - ./:/var/www
        command: ['php','artisan', 'app:get-and-set-to-storage-news']
        networks:
            - backend
        depends_on:
            - redis
    cron:
        image: 'backend'
        volumes:
            - ./:/var/www
        command: bash -c "(crontab -l 2>/dev/null; echo '* * * * * /usr/bin/php /var/www/artisan schedule:run') | crontab - && touch /var/log/cron.log && crond -f"
        networks:
            - backend
        depends_on:
            - redis

    web:
        image: nginx:alpine
        container_name: ${APP_NAME}-nginx
        restart: unless-stopped
        tty: true
        volumes:
        - ./:/var/www
        - ./docker/nginx/:/etc/nginx/conf.d/
        ports:
            - ${APP_PORT:-8080}:80
        networks:
            - backend

    mongodb:
        image: 'mongo'
        container_name: mongodb
        restart: unless-stopped
        environment:
            - 'MONGODB_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-}'
            - 'MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-}'
        volumes:
            - 'data-mongodb:/data/db'
        ports:
            - '${FORWARD_MONGODB_PORT:-27017}:27017'
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - mongosh
                - 'mongodb://localhost:27017/admin'
                - '--eval=db.runCommand({ping:1})'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        container_name: redis
        restart: unless-stopped
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'data-redis:/data'
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    backend:
        driver: bridge
volumes:
    data-mongodb:
        driver: local
    data-redis:
        driver: local
